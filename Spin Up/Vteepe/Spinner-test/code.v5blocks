{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"30\" y=\"10\"></block><block type=\"v5_events_when_bumper\" id=\"_w/82@3P(d)pU/.rv9|z\" x=\"10\" y=\"150\"><field name=\"BUMPER\">BumperA</field><field name=\"EVENTTYPE\">released</field><next><block type=\"v5_motion_stop_motor\" id=\"`8lf.;GgRCqk047_zfMF\"><field name=\"MOTOR\">MotorGroup2</field></block></next></block><block type=\"v5_events_when_bumper\" id=\"*bw=ICr@}i(6/ONX~Z^P\" x=\"270\" y=\"310\"><field name=\"BUMPER\">BumperA</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_motion_spin_at_voltage\" id=\":k.m9L2n-Ttdt@d[K02r\"><field name=\"MOTOR\">MotorGroup2</field><field name=\"DIRECTION\">fwd</field><value name=\"VOLTAGE\"><shadow type=\"math_number\" id=\"]6ZX=+aj1kh1Fj+]6IY5\"><field name=\"NUM\">50</field></shadow></value></block></next></block></xml>","rconfig":[{"port":[2,3],"name":"MotorGroup2","customName":false,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio6_1","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[1],"name":"BumperA","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20210708.10.00.00","appVersion":"2.2.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nmotor MotorGroup2MotorA = motor(PORT2, ratio6_1, false);\nmotor MotorGroup2MotorB = motor(PORT3, ratio6_1, true);\nmotor_group MotorGroup2 = motor_group(MotorGroup2MotorA, MotorGroup2MotorB);\n\nbumper BumperA = bumper(Brain.ThreeWirePort.A);\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  return 0;\n}\n\n// \"when BumperA released\" hat block\nvoid onevent_BumperA_released_0() {\n  MotorGroup2.stop();\n}\n\n// \"when BumperA pressed\" hat block\nvoid onevent_BumperA_pressed_0() {\n  MotorGroup2.spin(forward, 50.0, volt);\n}\n\n\nint main() {\n  // register event handlers\n  BumperA.released(onevent_BumperA_released_0);\n  BumperA.pressed(onevent_BumperA_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}