{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"></block><block type=\"v5_events_when_bumper\" id=\"w6F=y2K]5P6lI+-FDm;r\" x=\"650\" y=\"190\"><field name=\"BUMPER\">BumperB</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_motion_spin\" id=\"O5-Ch5{,QnTN`f,B|ZVk\"><field name=\"MOTOR\">Motor3</field><field name=\"DIRECTION\">rev</field></block></next></block><block type=\"v5_events_when_bumper\" id=\"N_cPB/e7$vZtcu]C2%vH\" x=\"270\" y=\"210\"><field name=\"BUMPER\">BumperA</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_motion_spin_at_voltage\" id=\"t@Gzvw-XnEZ3D{$k36JE\"><field name=\"MOTOR\">Motor3</field><field name=\"DIRECTION\">fwd</field><value name=\"VOLTAGE\"><shadow type=\"math_number\" id=\"x8w65k=mG[syNrD-VUZx\"><field name=\"NUM\">10</field></shadow></value></block></next></block><block type=\"v5_events_when_bumper\" id=\"Zwt3gIZ)4zX7:lNdeG4q\" x=\"190\" y=\"450\"><field name=\"BUMPER\">BumperA</field><field name=\"EVENTTYPE\">released</field><next><block type=\"v5_motion_stop_motor\" id=\"3xVsAc]/puHH0mo2|;@!\"><field name=\"MOTOR\">Motor3</field></block></next></block><block type=\"v5_events_when_bumper\" id=\"F/D,7Jtj,9KIK)w0^g3_\" x=\"650\" y=\"450\"><field name=\"BUMPER\">BumperB</field><field name=\"EVENTTYPE\">released</field><next><block type=\"v5_motion_stop_motor\" id=\"yI~ty_Rky(b~iY~6HqOS\"><field name=\"MOTOR\">Motor3</field></block></next></block></xml>","rconfig":[{"port":[1],"name":"BumperA","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[2],"name":"BumperB","customName":false,"deviceType":"Bumper","deviceClass":"bumper","setting":{},"triportSourcePort":22},{"port":[3],"name":"Motor3","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"}}],"slot":0,"platform":"V5","sdkVersion":"20210708.10.00.00","appVersion":"2.2.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\nbumper BumperA = bumper(Brain.ThreeWirePort.A);\nbumper BumperB = bumper(Brain.ThreeWirePort.B);\nmotor Motor3 = motor(PORT3, ratio18_1, true);\n\n\n\n\n// Generated code.\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  return 0;\n}\n\n// \"when BumperB pressed\" hat block\nvoid onevent_BumperB_pressed_0() {\n  Motor3.spin(reverse);\n}\n\n// \"when BumperA pressed\" hat block\nvoid onevent_BumperA_pressed_0() {\n  Motor3.spin(forward, 10.0, volt);\n}\n\n// \"when BumperA released\" hat block\nvoid onevent_BumperA_released_0() {\n  Motor3.stop();\n}\n\n// \"when BumperB released\" hat block\nvoid onevent_BumperB_released_0() {\n  Motor3.stop();\n}\n\n\nint main() {\n  // register event handlers\n  BumperB.pressed(onevent_BumperB_pressed_0);\n  BumperA.pressed(onevent_BumperA_pressed_0);\n  BumperA.released(onevent_BumperA_released_0);\n  BumperB.released(onevent_BumperB_released_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}