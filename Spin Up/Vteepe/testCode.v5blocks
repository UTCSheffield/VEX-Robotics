{"mode":"Blocks","workspace":"<xml xmlns=\"http://www.w3.org/1999/xhtml\"><variables><variable type=\"\" id=\"U`9aA+=)r+L1tzA.)-qi\" islocal=\"false\" iscloud=\"false\" arraylength=\"0\" arraywidth=\"0\">myVariable</variable></variables><block type=\"v5_events_when_started\" id=\".NsXwU_L.OuU1l7Sho$F\" x=\"70\" y=\"110\"></block><block type=\"v5_events_when_controller_button\" id=\"gOvE~GJGjZ8O$e%yK*=e\" x=\"210\" y=\"230\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonUp</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_sensing_set_digital_out\" id=\"!T[ltIF)-}si{J4Nb4w@\"><field name=\"DIGITALOUT\">DigitalOutB</field><field name=\"STATE\">high</field><next><block type=\"v5_sensing_set_digital_out\" id=\"avV3hs@O6C2D]j]O3/R]\"><field name=\"DIGITALOUT\">DigitalOutC</field><field name=\"STATE\">low</field><next><block type=\"v5_control_wait\" id=\"UF7pqhs6Md0O.hx2|eC3\"><value name=\"DURATION\"><shadow type=\"math_positive_number\" id=\"Y?F:uhE5,TCjRL+KXH*`\"><field name=\"NUM\">1</field></shadow></value><next><block type=\"v5_sensing_set_digital_out\" id=\"+d:T7$9o|bMcEn82^vr#\"><field name=\"DIGITALOUT\">DigitalOutB</field><field name=\"STATE\">low</field><next><block type=\"v5_sensing_set_digital_out\" id=\"j?M%N8f%vm(z|C_#Gnt=\"><field name=\"DIGITALOUT\">DigitalOutC</field><field name=\"STATE\">high</field></block></next></block></next></block></next></block></next></block></next></block><block type=\"v5_events_when_controller_button\" id=\"UJi0)ocf)(+H1Ydg(]a!\" x=\"310\" y=\"550\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonR2</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_sensing_set_digital_out\" id=\",,;O#[n|FrfttOCm9ofh\"><field name=\"DIGITALOUT\">DigitalOutB</field><field name=\"STATE\">high</field></block></next></block><block type=\"v5_events_when_controller_button\" id=\"Cx4C]xe~pRRLY@6{Nzgv\" x=\"90\" y=\"670\"><field name=\"CONTROLLER\">Controller1</field><field name=\"BUTTON\">ButtonL2</field><field name=\"EVENTTYPE\">pressed</field><next><block type=\"v5_sensing_set_digital_out\" id=\"JLvERI3Oj]k6lMlerL7+\"><field name=\"DIGITALOUT\">DigitalOutB</field><field name=\"STATE\">low</field></block></next></block></xml>","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"}},{"port":[2],"name":"DigitalOutB","customName":false,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22},{"port":[3],"name":"DigitalOutC","customName":false,"deviceType":"DigitalOut","deviceClass":"digital_out","setting":{"id":"partner"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20220726.10.00.00","appVersion":"2.4.0","minVersion":"2.4.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","cppStatus":"true","cpp":"// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\ndigital_out DigitalOutB = digital_out(Brain.ThreeWirePort.B);\ndigital_out DigitalOutC = digital_out(Brain.ThreeWirePort.C);\n\n\n\n\n\n// Generated code.\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n\n\n// Include the V5 Library\n#include \"vex.h\"\n  \n// Allows for easier use of the VEX Library\nusing namespace vex;\n\nfloat myVariable;\n\n// \"when started\" hat block\nint whenStarted1() {\n  return 0;\n}\n\n// \"when Controller1 ButtonUp pressed\" hat block\nvoid onevent_Controller1ButtonUp_pressed_0() {\n  DigitalOutB.set(true);\n  DigitalOutC.set(false);\n  wait(1.0, seconds);\n  DigitalOutB.set(false);\n  DigitalOutC.set(true);\n}\n\n// \"when Controller1 ButtonR2 pressed\" hat block\nvoid onevent_Controller1ButtonR2_pressed_0() {\n  DigitalOutB.set(true);\n}\n\n// \"when Controller1 ButtonL2 pressed\" hat block\nvoid onevent_Controller1ButtonL2_pressed_0() {\n  DigitalOutB.set(false);\n}\n\n\nint main() {\n  // register event handlers\n  Controller1.ButtonUp.pressed(onevent_Controller1ButtonUp_pressed_0);\n  Controller1.ButtonR2.pressed(onevent_Controller1ButtonR2_pressed_0);\n  Controller1.ButtonL2.pressed(onevent_Controller1ButtonL2_pressed_0);\n\n  wait(15, msec);\n  // post event registration\n\n  // set default print color to black\n  printf(\"\\033[30m\");\n\n  // wait for rotation sensor to fully initialize\n  wait(30, msec);\n\n  whenStarted1();\n}","target":"Physical"}